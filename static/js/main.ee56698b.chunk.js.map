{"version":3,"sources":["Components/Search.js","Components/Toggle.js","Components/WeatherStyles.js","Components/WeatherIcon.js","Components/WeatherWind.js","Components/LocationDetails.js","Components/WeatherToday.js","Components/WeatherTom.js","Components/WeatherDayAfterTom.js","Containers/App2.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["useStyles","makeStyles","theme","margin","marginTop","spacing","padding","Search","searchWeather","onHandleSearchChange","getLocation","classes","onSubmit","className","Grid","container","justify","alignItems","item","xs","TextField","onChange","id","label","Button","type","onClick","Toggle","useState","toggleOn","setToggleOn","FormControl","component","FormGroup","aria-label","row","FormControlLabel","value","control","Switch","e","console","log","color","Typography","variant","labelPlacement","WeatherStyles","root","flexGrow","paper","textAlign","display","justifyContent","palette","text","secondary","textTransform","height","borderRadius","background","boxShadow","paperSelected","paperLocationDetails","paperLocationV2","WeatherIcon","icon","weatherLoaded","Paper","src","alt","useStyle","WeatherWind","wind","style","fontSize","transform","wind_direction","Math","round","windSpeed","initialWeather","temp","sunrise","sunset","location","description","LocationDetails","getDate","isPending","getDay","weatherData","weatherDataLoaded","weather","setWeather","setWeatherLoaded","useEffect","newWeatherOBJ","current","Date","windDirection","wind_deg","wind_speed","newWeatherOBJ2","daily","day","newWeatherOBJ3","elevation","getHours","getMinutes","WeatherToday","onRequestDate","select","setSelect","date","calculateDay","App","preventDefault","props","searchField","state","this","onRequestWeather","onHandleSetDay","Container","maxWidth","backgroundColor","flexDirection","marginBottom","WeatherTom","WeatherDayAfterTom","React","Component","connect","searchLocation","requestWeather","error","requestDate","requestDay","dispatch","event","payload","target","fetch","then","response","json","data","catch","chosenDay","days","months","tomorrow","x","setDate","dayAfterTomorrow","getMonth","getFullYear","Boolean","window","hostname","match","initialStateSearch","initialStateWeather","initialStateDate","initialStateDay","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee56698b.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, makeStyles, TextField, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SendIcon from '@material-ui/icons/DoubleArrowRounded';\nimport LocationIcon from '@material-ui/icons/MyLocation';\n\nconst useStyles = makeStyles((theme) => ({\n    \n    margin: {\n        marginTop: theme.spacing(2),\n        // borderRadius: '10px',\n        // background: '#ecf0f3',\n        // boxShadow: 'inset 3px 3px 5px #8e9092,inset -3px -3px 5px #ffffff',\n        padding: '.5rem',\n    }\n  }));\n\n  \n\nconst Search = ({searchWeather, onHandleSearchChange, getLocation}) => {\n    const classes = useStyles();\n\n\n      const getUserLocation = () => {\n        getLocation()\n      };\n\n\n    return(\n            <form onSubmit={searchWeather} >\n                <div className={classes.margin}>\n                    <Grid container spacing={1} justify='space-evenly' alignItems=\"flex-end\">\n                        <Grid item xs={1}>\n                            <SearchIcon />\n                        </Grid>\n                        <Grid item xs={5}>\n                            <TextField\n                                onChange={onHandleSearchChange} \n                                id=\"search\"\n                                label=\"Search\"\n                                />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button type='submit'><SendIcon/></Button>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button onClick={getUserLocation}><LocationIcon/></Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </form>\n    )\n};\n\nexport default Search;","import React, { useState } from 'react';\nimport { Grid, Switch, makeStyles, Typography, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    \n  margin: {\n      marginTop: theme.spacing(3),\n  },\n\n}));\n\n\nconst Toggle = () => {\n\n    const classes = useStyles()\n\n    const [toggleOn, setToggleOn ] = useState(true)\n\n    const handleToggleSwitch = e => {\n        setToggleOn(!toggleOn)\n        console.log(toggleOn)\n    }\n\n    const toggleText = () => {\n        return <Typography variant='button'>{toggleOn? 'Light' : 'Dark'}</Typography>\n    }  \n\n    return(\n        <Grid item xs={3}>\n            <div className={classes.margin}>\n                <Grid container alignItems='flex-end' >\n                    <Grid item xs={12}>\n                    <FormControl component='fieldset'>\n                    <FormGroup aria-label=\"position\" row>\n                      <FormControlLabel\n                        value=\"bottom\"\n                        control={<Switch onClick={handleToggleSwitch} color=\"primary\" />}\n                        label={toggleText()}\n                        labelPlacement=\"bottom\"\n                      />\n                      </FormGroup>\n                    </FormControl>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        <Typography style={{fontSize: '.6rem'}} variant='button'> { toggleOn?  'Light' : 'Dark' }</Typography>\n                    </Grid> */}\n                    \n                </Grid>\n            </div>\n        </Grid>\n    )\n};\n\nexport default Toggle;","export const WeatherStyles = (theme) => ({\n    root: {\n      flexGrow: 1,\n      margin: '0 auto'\n    },\n    paper: {\n      marginTop: '2rem',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.text.secondary,\n      textTransform: 'uppercase',\n      height: '10vh',\n      borderRadius: '20px',\n      background: 'linear-gradient(145deg, #d4d8db, #fdffff)',\n      boxShadow:  '5px 5px 10px #8e9092, -5px -5px 10px #ffffff'\n    },\n    paperSelected: {\n      marginTop: '2rem',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'white',\n      textTransform: 'uppercase',\n      height: '10vh',\n      borderRadius: '20px',\n      background: '#81859C',\n      boxShadow:  'inset 5px 5px 10px #272932, inset -5px -5px 10px #A4A7B7'\n    },\n    paperLocationDetails: {\n      display: 'flex',\n      alignItems: 'space-around',\n      marginTop: '2rem',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '60vh',\n      borderRadius: '20px',\n      background: 'linear-gradient(145deg, #d4d8db, #fdffff)',\n      boxShadow:  '5px 5px 10px #8e9092, -5px -5px 10px #ffffff'\n    },\n    paperLocationV2: {\n      marginTop: '2rem',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.text.secondary,\n      textTransform: 'uppercase',\n      height: '10vh',\n      borderRadius: '25px',\n      background: 'linear-gradient(145deg, #A4A7B7, #fdffff)',\n      boxShadow:  '2px 2px 5px #8e9092, -2px -2px 5px #ffffff'\n  }\n  });\n\n  ","import React from 'react';\nimport { Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherIcon = ({icon, weatherLoaded}) => {\n\n    const  classes  = useStyles()\n\n    const weatherIcon = () => {\n        return weatherLoaded? \n            icon: '50n'\n            \n    }\n\n\n    return(\n            <Paper className={classes.paperLocationV2}>\n                <Typography variant='button'>\n                    <img src={`http://openweathermap.org/img/wn/${weatherIcon()}@2x.png`} alt='weatherIcon'/> \n                </Typography>\n            </Paper>\n    )\n};\n\nexport default WeatherIcon;","import React from 'react';\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\nimport ArrowIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyle = makeStyles(WeatherStyles)\n\nconst WeatherWind = ({wind, weatherLoaded}) => {\n\n    const classes = useStyle()\n\n    const weatherWind = () => {\n        return weatherLoaded? \n            `${Math.round(wind.windSpeed)} mph` : ''\n            \n    }\n\n    const arrow = () => {\n        return weatherLoaded? \n            <ArrowIcon style={{fontSize: '3rem', transform: `rotate(${wind.wind_direction}deg)`}}/> : <ArrowIcon style={{fontSize: '4rem'}}/>\n    }\n\n    return(\n            <Paper className={classes.paperLocationV2}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        {arrow()}\n                    </Grid>\n                    <Grid item xs={12}>\n                    <Typography variant='button'>{weatherWind()}</Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n    )\n};\n\nexport default WeatherWind;","import React, {useEffect, useState} from 'react';\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\nimport WeatherIcon from './WeatherIcon';\nimport WeatherWind from './WeatherWind';\n\nconst useStyle = makeStyles(WeatherStyles)\n\nconst initialWeather = {\n    temp: 0,\n    sunrise: null,\n    sunset: null,\n    location: null,\n    description: null,\n    wind: null,\n    icon: null\n}\n\nconst LocationDetails = ({getDate, isPending, getDay, weatherData, location, weatherDataLoaded}) => {\n\n    const classes = useStyle();\n    const [ weather, setWeather ] = useState({...initialWeather});\n    const [ weatherLoaded, setWeatherLoaded ] = useState(false);\n\n\n\n    useEffect( () => {\n        if(!isPending) {\n            switch(getDay){\n                case 'today':\n                    setWeatherLoaded(true)\n                    const newWeatherOBJ = {\n                        temp: weatherData.current.temp,\n                        sunrise: new Date(weatherData.current.sunrise * 1000),\n                        sunset: new Date(weatherData.current.sunset * 1000),\n                        location: null,\n                        description: weatherData.current.weather[0].description,            \n                        wind: \n                            {\n                                windDirection: weatherData.current.wind_deg,\n                                windSpeed: weatherData.current.wind_speed\n                            },\n                        icon: weatherData.current.weather[0].icon\n                      }\n                      return setWeather(newWeatherOBJ)\n                case 'tom':\n                    setWeatherLoaded(true)\n                    const newWeatherOBJ2 = {\n                        temp: weatherData.daily[1].temp.day,\n                        sunrise: new Date(weatherData.daily[1].sunrise * 1000),\n                        sunset: new Date(weatherData.daily[1].sunset * 1000),\n                        location: null,\n                        description: weatherData.daily[1].weather[0].description,\n                        wind: \n                            {\n                                windDirection: weatherData.daily[1].wind_deg,\n                                windSpeed: weatherData.daily[1].wind_speed\n                            },\n                        icon: weatherData.daily[1].weather[0].icon\n                      }\n                      return setWeather(newWeatherOBJ2)\n                case 'dat':\n                    setWeatherLoaded(true)\n                    const newWeatherOBJ3 = {\n                        temp: weatherData.daily[2].temp.day,\n                        sunrise: new Date(weatherData.daily[2].sunrise * 1000),\n                        sunset: new Date(weatherData.daily[2].sunset * 1000),\n                        location: null,\n                        description: weatherData.daily[2].weather[0].description,\n                        wind: \n                            {\n                                windDirection: weatherData.daily[2].wind_deg,\n                                windSpeed: weatherData.daily[2].wind_speed\n                            },\n                        icon: weatherData.daily[2].weather[0].icon\n                      }\n                      return setWeather(newWeatherOBJ3)\n                default:\n                    return setWeather({...initialWeather})\n            }\n        }\n    },[setWeather, getDay, isPending, weatherData] )\n\n\n    return(\n            <Paper elevation={3} className={classes.paperLocationDetails}>\n            <Grid container spacing={2} >\n                    <Grid container justify='center' spacing={3}>\n                    <Grid item xs={4}>\n                        <WeatherIcon icon={weather.icon} weatherLoaded={weatherLoaded} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <WeatherWind wind={weather.wind} weatherLoaded={weatherLoaded} />   \n                    </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='button'>{ getDate }</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        {weatherLoaded?\n                        <Typography variant='h2'> {Math.round(weather.temp)}°C</Typography>\n                        :\n                        <Typography variant='h4'>Loading</Typography>\n                        } \n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='button'>{ weatherDataLoaded? location : 'Loading'}</Typography>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        <div style={{position: 'absolute', width: '100%', display: 'flex', flexDirection:'row', justifyContent:'space-between'}}>\n                                <Paper ><Button>Left</Button></Paper>\n                                <Paper ><Button>Right</Button></Paper>\n                        </div>\n                    </Grid> */}\n                    <Grid item xs={12}>\n                        <Typography style={{textTransform:'uppercase'}} variant='h6'>{ weatherLoaded? weather.description : 'Loading'}</Typography>\n                    </Grid>\n                    <Grid container style={{marginTop: '.5rem'}}>\n                        <Grid item xs={6}>\n                            <Typography variant='button'>Sunrise: { weatherLoaded? `${new Date( weather.sunrise).getHours()}:${new Date( weather.sunrise).getMinutes()}`: 'Loading'}</Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                        <Typography variant='button'>Sunset: { weatherLoaded? `${new Date( weather.sunset).getHours()}:${new Date( weather.sunset).getMinutes()}`: 'Loading'}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n    )\n};\n\nexport default LocationDetails;","import React, { useState, useEffect  } from 'react';\nimport { Paper, makeStyles, Typography} from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({getDay, onRequestDate}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(true);\n\n    useEffect( () => {\n        if(getDay === 'today') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[getDay] )\n\n    \n    return(\n        \n        \n            <Paper onClick={() => onRequestDate('today')} className={ select ? classes.paperSelected : classes.paper}>\n                <Typography id='today' style={{fontSize: '.75rem'}}>Today <br/> {new Date().getDate()} </Typography>  \n            </Paper>\n    )\n};\n\nexport default WeatherToday;","import React, { useState, useEffect } from 'react';\nimport { Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({getDay, onRequestDate}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(false);\n\n    useEffect( () => {\n        if(getDay === 'tom') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[getDay] )\n    \n\n    return(\n            <Paper onClick={() => onRequestDate('tom')} className={ select ? classes.paperSelected : classes.paper}>\n            \n                        <Typography id='tom' style={{fontSize: '.75rem'}} >Tomorrow <br/> {new Date().getDate()+1}</Typography>\n                    \n            </Paper>\n    )\n};\n\nexport default WeatherToday;","import React, { useState, useEffect } from 'react';\nimport { Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({getDay, onRequestDate}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(false);\n\n    useEffect( () => {\n        if(getDay === 'dat') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[getDay] )\n\n    const calculateDay = () => {\n        \n        const date = new Date().getDate()+2;\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        return <Typography style={{fontSize: '.75rem'}} id='dat'>{days[new Date().getDay()]} <br/> {date}</Typography>\n    }\n\n    return(\n            <Paper onClick={() => onRequestDate('dat')} className={ select ? classes.paperSelected : classes.paper}>\n                {calculateDay()}\n            </Paper>\n    )\n};\n\nexport default WeatherToday;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, getRequestWeather, setDates} from '../actions';\nimport { Container, Grid, Paper } from '@material-ui/core';\nimport Search from '../Components/Search';\nimport Toggle from '../Components/Toggle';\nimport LocationDetails from '../Components/LocationDetails';\nimport WeatherToday from '../Components/WeatherToday';\nimport WeatherTom from '../Components/WeatherTom';\nimport WeatherDayAfterTom from '../Components/WeatherDayAfterTom';\n\n// const API_KEY = `6f59aafd13d9cd8666b8c2261057b8fa`;\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchLocation.searchField,\n        weatherData: state.requestWeather.weatherData,\n        isPending: state.requestWeather.isPending,\n        error: state.requestWeather.error,\n        getDate: state.requestDate.getDate,\n        getDay: state.requestDay.getDay\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return { \n        onHandleSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        // onHandleSetDay: (event) => dispatch(setDay(event.target.id)),\n        onRequestWeather: () => dispatch(getRequestWeather()),\n        onRequestDate: (day) => dispatch(setDates(day)),\n    }\n}\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            getDay: 'today'\n        }\n    }\n\n    componentDidMount(){\n        this.props.onRequestWeather()\n        this.props.onRequestDate('today')\n    }\n\n    searchWeather = (e) => {\n        e.preventDefault()\n        console.log('Get This', this.props.searchField)\n    }\n\n    render(){\n\n        const { onHandleSearchChange, weatherData, isPending, getDay, onHandleSetDay, onRequestDate, getDate  } = this.props;\n\n        return(\n            <Container maxWidth='xs'>\n            \n                <Paper elevation={0} style={{ backgroundColor: '#ecf0f3', height: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={8}>\n                        {/* <button onClick={ () => this.props.onRequestDate('tom') }>Click</button> */}\n                            <Search \n                                onHandleSearchChange={onHandleSearchChange}\n                                searchWeather={this.searchWeather}\n                            />\n                            \n                        </Grid>\n                        <Grid item xs={4}>\n                            <Toggle/>   \n                        </Grid>\n                    </Grid>\n                    {/* <Grid container justify='space-between' spacing={3}>\n                        <Grid item xs={6}>\n                            <WeatherIcon/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <WeatherWind/>   \n                        </Grid>\n                    </Grid> */}\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LocationDetails isPending={isPending} getDay={getDay} weatherData={weatherData} getDate={getDate}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3} style={{marginBottom: '2rem'}}>\n                        <Grid item xs={4}>\n                            <WeatherToday getDay={getDay} onRequestDate={onRequestDate} onHandleSetDay={onHandleSetDay}/>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <WeatherTom getDay={getDay}  onRequestDate={onRequestDate} onHandleSetDay={onHandleSetDay}/>    \n                        </Grid>\n                        <Grid item xs={4}>\n                            <WeatherDayAfterTom getDay={getDay} onRequestDate={onRequestDate} onHandleSetDay={onHandleSetDay}/>    \n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { CHANGE_SEARCHFIELD,\n        REQUEST_WEATHER_PENDING,\n        REQUEST_WEATHER_SUCCESS,\n        REQUEST_WEATHER_FAILED,\n        GET_DATE,\n        GET_DAY\n    } from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n})\n\nexport const getRequestWeather = () => (dispatch) => {\n    const API_KEY = `6f59aafd13d9cd8666b8c2261057b8fa`;\n    const lat = 51.5074;\n    const long = 0.1278;\n\n    dispatch({ type: REQUEST_WEATHER_PENDING })\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=hourly&units=metric&appid=${API_KEY}`)\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_WEATHER_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_WEATHER_FAILED, payload: error}))\n}\n\nexport const setDates = (chosenDay, day) => (dispatch) => {\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    \n    const date = new Date()\n    const tomorrow = () => {\n        const x = new Date();\n        x.setDate(new Date().getDate()+1);\n        return x\n    }\n    const dayAfterTomorrow = () => {\n        const x = new Date();\n        x.setDate(new Date().getDate()+2);\n        return x\n    }\n\n    if(chosenDay === 'today' ) {\n       dispatch({\n        type: GET_DATE,\n        payload: days[date.getDay()] + ' ' + date.getDate() + ' ' + months[date.getMonth()] + ' ' + date.getFullYear()\n       }) \n       dispatch({\n           type: GET_DAY,\n           payload: chosenDay\n       })\n    }\n\n    if(chosenDay === 'tom' ) {\n        dispatch({\n         type: GET_DATE,\n         payload: days[tomorrow().getDay()] + ' ' + tomorrow().getDate() + ' ' + months[tomorrow().getMonth()] + ' ' + tomorrow().getFullYear()\n        })\n        dispatch({\n            type: GET_DAY,\n            payload: chosenDay\n        })\n     }\n\n     if(chosenDay === 'dat' ) {\n        dispatch({\n         type: GET_DATE,\n         payload: days[dayAfterTomorrow().getDay()] + ' ' + dayAfterTomorrow().getDate() + ' ' + months[dayAfterTomorrow().getMonth()] + ' ' + dayAfterTomorrow().getFullYear()\n        })\n        dispatch({\n            type: GET_DAY,\n            payload: chosenDay\n        })\n     }\n   \n}\n\n\nexport const setDay = (day) => ({\n    type: GET_DAY,\n    payload: day\n})","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD'\nexport const GET_DAY = 'GET_DAY';\nexport const GET_DATE = 'GET_DATE';\n\nexport const REQUEST_WEATHER_PENDING = 'REQUEST_WEATHER_PENDING';\nexport const REQUEST_WEATHER_SUCCESS = 'REQUEST_WEATHER_SUCCESS';\nexport const REQUEST_WEATHER_FAILED = 'REQUEST_WEATHER_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_SEARCHFIELD,\n    REQUEST_WEATHER_PENDING,\n    REQUEST_WEATHER_SUCCESS,\n    REQUEST_WEATHER_FAILED,\n    GET_DATE,\n    GET_DAY\n} from './constants';\n\nconst initialStateSearch = {\n    searchField: '',\n}\n\nconst initialStateWeather = {\n    isPending: true,\n    weatherData: null,\n    error: null\n}\n\nconst initialStateDate = {\n    getDate: null,\n}\n\nconst initialStateDay = {\n    getDay: 'today'\n}\n\nexport const searchLocation = (state = initialStateSearch, action = {}) => {\n    switch(action.type) {\n        case CHANGE_SEARCHFIELD:\n            return { ...state, searchField: action.payload }\n        default: \n            return state;\n    }\n}\n\nexport const requestWeather = (state = initialStateWeather, action={}) => {\n    switch(action.type){\n        case REQUEST_WEATHER_PENDING:\n            return { ...state, isPending: true };\n        case REQUEST_WEATHER_SUCCESS:\n            return { ...state,  weatherData: action.payload, isPending: false }\n        case REQUEST_WEATHER_FAILED:\n            return { ...state, error: action.payload}\n        default: \n            return state;\n    }\n}\n\nexport const requestDate = (state = initialStateDate, action = {}) => {\n    switch(action.type){\n        case GET_DATE:\n            return { ...state, getDate : action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const requestDay = (state = initialStateDay, action = {}) => {\n    switch(action.type){\n        case GET_DAY:\n            return { ...state, getDay: action.payload }\n        default:\n            return state;\n    }\n}\n\n// export const weatherDay = (state = initialState, action = {}) => {\n//     switch(action.type) {\n//         case GET_DAY:\n//             return { ...state, day: action.payload}\n//         default:\n//             return state;\n//     }\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './Containers/App2';\nimport * as serviceWorker from './serviceWorker';\nimport { searchLocation, requestWeather, requestDate, requestDay } from './reducers';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchLocation, requestWeather, requestDate, requestDay})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store} >\n      <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}